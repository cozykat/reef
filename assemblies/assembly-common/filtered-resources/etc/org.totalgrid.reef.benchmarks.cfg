
# base file name of directory to write out files
org.totalgrid.reef.benchmarks.outputFileBaseName = target/

# if running against a reef 0.4.4 node or greater we can remotley collect metrics from server
org.totalgrid.reef.benchmarks.collectServerSideMetrics = true

# measthroughput tests aim to measure the speed of the measurement processing elements
org.totalgrid.reef.benchmarks.measthroughput.enabled = true

# for these tests we will setup N endpoints with M points each
org.totalgrid.reef.benchmarks.measthroughput.numEndpoints = 10
org.totalgrid.reef.benchmarks.measthroughput.numPointsPerEndpoint = 20

# do we want to add the synthetic pointsEndpoints (can be disabled to save time
# but only if the endpoints have been added once)
org.totalgrid.reef.benchmarks.measthroughput.addEndpoints = true
# whether to remove the points at end of test (disable if trying to keep filling
# the system as much as possible)
org.totalgrid.reef.benchmarks.measthroughput.removeEndpoints = false
# when loading alot of endpoints its faster to do it in parallel
org.totalgrid.reef.benchmarks.measthroughput.endpointWriters = 5
org.totalgrid.reef.benchmarks.measthroughput.endpointBatchSize = 50

# total number of measurements to publish in each run
org.totalgrid.reef.benchmarks.measthroughput.publishMeasTotal = 5000
# list of batch sizes to publish measurements in groups of
org.totalgrid.reef.benchmarks.measthroughput.publishMeasBatchSizes = 25
# number of concurrent writers to keep running at a time
org.totalgrid.reef.benchmarks.measthroughput.publishMeasWriters = 1,5,10
# number of extra subscribers to subscribe to measurements
org.totalgrid.reef.benchmarks.measthroughput.subscribers = 0
# notice we do publishMeasBatchSizes.size * publishMeasWriters.size runs so 
# we actually end up with runs * publishMeasTotal measurments in the system

# once we have run all of the publishing steps we can read values from the 
# measurement store to test its performance with N points in it
org.totalgrid.reef.benchmarks.measthroughput.measTestReads = true
# how many points (randomly chosen) to run measurement stats
org.totalgrid.reef.benchmarks.measthroughput.measStatPoints = 20
# how many points (randomly chosen) to run measurement history tests
org.totalgrid.reef.benchmarks.measthroughput.measHistoryPoints = 20
# we get oldest N and newest N measurements to test history performance
org.totalgrid.reef.benchmarks.measthroughput.measHistorySizes = 10,1000
# how many times to run measurement current value requests
org.totalgrid.reef.benchmarks.measthroughput.measCurrentValueAttempts = 5

# live tests are run against points already in the model, useful for health checks
org.totalgrid.reef.benchmarks.live.enabled = true

# for the system state requests we do them more than once to get a more accurate
# measurement of how long they take to run
org.totalgrid.reef.benchmarks.live.requestAttempts = 5

# how many points (randomly chosen) to run measurement stats
org.totalgrid.reef.benchmarks.live.measStatPoints = 20
# how many points (randomly chosen) to run measurement history tests
org.totalgrid.reef.benchmarks.live.measHistoryPoints = 20
# we get oldest N and newest N measurements to test history performance
org.totalgrid.reef.benchmarks.live.measHistorySizes = 10,1000
# how many times to run measurement current value requests
org.totalgrid.reef.benchmarks.live.measCurrentValueAttempts = 5

# whether to cycle endpoints up and down (we only operate on named protocols)
org.totalgrid.reef.benchmarks.live.endpointManagementEnabled = true
org.totalgrid.reef.benchmarks.live.endpointManagementProtocols = benchmark
org.totalgrid.reef.benchmarks.live.endpointManagementCycles = 5