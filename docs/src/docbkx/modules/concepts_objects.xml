<section id="system_obj">
    <title>Operational Data</title>
    <para>Blah blah blah intro</para>

    <section id="obj_meas">
        <title>Measurements</title>
        <para>
            Measurements are the basic units of data published by <emphasis>data sources</emphasis> and processed and
            monitored by the system. Often, measurements are acquired using communications protocols, and are used
            to represent the state of remote <emphasis>field devices</emphasis>. Measurements may also be generated by
            applications or manually entered by users.</para>

        <para>Measurements carry the following data fields:</para>
        <itemizedlist>
            <listitem>
                <para><emphasis>Value</emphasis> can be of type boolean (<emphasis>status</emphasis>,
                    <emphasis>binary input</emphasis>), integer or floating point (<emphasis>analog</emphasis>,
                    <emphasis>analog input</emphasis>), or text string. This is the central data payload of
                    the measurement.
                </para>
            </listitem>
            <listitem>
                <para><emphasis>Quality</emphasis> gives users and applications extra information about the state of the
                    measurement. Quality may indicate problems with end devices, communications issues, or operator
                    influence ("blocked").
                </para>
            </listitem>
            <listitem>
                <para><emphasis>Time</emphasis> identifies when the measurement took place, or when it was acquired by
                    the communications system.
                </para>
            </listitem>
            <listitem>
                <para><emphasis>Unit</emphasis> gives the measurement value real-world meaning. Examples are "volt", "psi",
                    etc. Additionally, unit carries an implicit definition of scale.
                </para>
            </listitem>
        </itemizedlist>
        <para>
           Measurements enter the system either from communication <emphasis>front-ends</emphasis> or directly using the Reef
            APIs. The measurement <emphasis>stream</emphasis> is then processed -- configured transformations
            are applied (scaling, value mapping) and side-effects are triggered (event/alarm generation) . Finally, measurements are stored in
            the database and published to the bus.
        </para>
        <para>
           Many system functions are concerned with maintaining the most recent value for any given measurement in order to
            provide an up-to-date representation of system devices and components. The system also maintains
            <emphasis>measurement history</emphasis>, the chronological stream of previous measurement values.
        </para>
    </section>
    <section id="obj_meas">
        <title>Commands</title>
        <para>Commands</para>

        <para>Commands may or may not contain an associated value.</para>

    </section>
    <section id="obj_meas">
        <title>Events</title>
        <para>Events</para>
    </section>
    <section id="obj_meas">
        <title>Alarms</title>
        <para>Alarms</para>
    </section>

</section>
