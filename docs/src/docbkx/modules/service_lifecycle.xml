<section id="service_lifecycle">
    <title>Create, Update and Delete</title>
    <para>
        So far we've only dealt with requests that ask for the current state of the system. We'll now create and
        manipulate objects using the ISession.
    </para>
    <para>
        To demonstrate create/update/delete service functionality, we will use one of the simplest objects the
        ConfigFile object. ConfigFile objects contain generic (byte array) data provided by a configuration process and
        used by an application (i.e. a protocol implementation) that understands how to interpret it.
    </para>
    <para>
        First, we'll create a ConfigFile named "config01" that contains a plain-text string and send it to the server
        with the PUT verb. If there is already a ConfigFile object with the same name it will be updated. The ConfigFile
        object returned from the request will be exactly like the one we PUT except that it will the server assigned
        field "uid" filled out with a unique identifier.
        <example>
            <title>Creating a ConfigFile</title>
            <programlisting><![CDATA[
ConfigFile createRequest = ConfigFile.newBuilder()
        .setName("config01")
        .setMimeType("text/plain")
        .setFile(ByteString.copyFromUtf8("Example config file"))
        .build();
ConfigFile created = session.putOne(create);
System.out.println("UID: " + created.getUid());
    ]]></programlisting>
        </example>
    </para>
    <para>
        To modify this object, say to change the contents of the "file" field, we build a request first by copying all
        of
        fields (including "uid") and changing the file text. A PUT to the server will now update the config file.
        <example>
            <title>Updating a ConfigFile</title>
            <programlisting><![CDATA[
ConfigFile updateRequest = created.toBuilder() // copies all fields and makes a mutable object
        .setFile(ByteString.copyFromUtf8("Modified content"))
        .build();
ConfigFile modified = session.putOne(updateRequest);
System.out.println("Content: " + created.getFile().toStringUtf8());
    ]]></programlisting>
        </example>
    </para>

    <para>
        Finally, we delete our object:
        <example>
            <title>Deleting a ConfigFile</title>
            <programlisting><![CDATA[
ConfigFile deleted = session.deleteOne(modified);
    ]]></programlisting>
        </example>
    </para>
</section>